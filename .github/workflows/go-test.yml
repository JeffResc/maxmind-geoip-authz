name: Go Test

on:
  pull_request:
  push:
    branches: ["main"]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod

      - name: Compute base coverage
        if: github.event_name == 'pull_request'
        run: |
          git fetch origin ${{ github.event.pull_request.base.ref }} --depth=1
          git checkout ${{ github.event.pull_request.base.sha }}
          go test ./... -covermode=atomic -coverprofile=coverage_base.out
          go tool cover -func=coverage_base.out | tee coverage_base.txt
          echo "BASE_COVERAGE=$(grep total coverage_base.txt | awk '{print $3}')" >> $GITHUB_ENV
          git checkout ${{ github.sha }}

      - name: Run tests with coverage
        run: go test ./... -covermode=atomic -coverprofile=coverage.out

      - name: Generate coverage summary
        run: |
          go tool cover -func=coverage.out | tee coverage.txt
          CURRENT_COVERAGE=$(grep total coverage.txt | awk '{print $3}')
          if [ "$GITHUB_EVENT_NAME" = "pull_request" ]; then
            echo "Previous coverage: $BASE_COVERAGE" >> "$GITHUB_STEP_SUMMARY"
            echo "Current coverage:  $CURRENT_COVERAGE" >> "$GITHUB_STEP_SUMMARY"
          fi
          cat coverage.txt >> "$GITHUB_STEP_SUMMARY"

      - name: Generate HTML report
        run: go tool cover -html=coverage.out -o coverage.html

      - name: Upload base coverage artifact
        if: github.event_name == 'pull_request'
        uses: actions/upload-artifact@v4
        with:
          name: base-coverage-report
          path: |
            coverage_base.out
            coverage_base.txt

      - name: Upload coverage artifact
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: |
            coverage.out
            coverage.txt
            coverage.html

